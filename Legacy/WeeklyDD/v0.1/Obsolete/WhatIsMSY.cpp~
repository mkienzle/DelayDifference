// CREATED  19 November 2013
// MODIFIED 19 November 2013

// COMPILE g++ -std=c++0x -g -o WhatIsMSY -I/usr/include /usr/lib/prob.o YearlyLongTermCatch.cxx vonMisesRecDist.cxx WhatIsMSY.cpp

// PURPOSE

#include <fstream>
#include <sstream>

#include <iostream>
#include <vector>
#include "FixPar.h"


using namespace std;

int YearlyLongTermCatch(const long unsigned int max_timestep, const double &TargetedEffort, const std::vector<double> &NontargetedEffort, const std::vector<double> &par, std::vector<double> &Biomass, std::vector<double> &PropMature, std::vector<double> &SrPar, std::vector<double> &FishingPattern, std::vector<double> &Availability);

int main(int argc, char *argv[]){

  const int NbYear = 100;

    // Read single column file containing parameters 
    std::ifstream ParFile(argv[1]);
    std::vector< double > Par;
    double a;

    while(ParFile >> a){
      Par.push_back(a);}
    ParFile.close();
    
    cout << "Read in " << Par.size() << " estimated parameters from catch and effort data\n";

    // Read single column file containing the proportion of biomass sexually mature 
    std::ifstream MaturityFile(argv[2]);
    std::vector< double > PropMature;
    double b;

    while(MaturityFile >> b){
      PropMature.push_back(b);}
    MaturityFile.close();

    cout << "Read in " << PropMature.size() << " proportion of sexually mature biomass\n";

    // Read single column file containing the stock recruitment parameters
    std::ifstream SRFile(argv[3]);
    std::vector< double > SrPar;
    double c;

    while(SRFile >> c){
      SrPar.push_back(c);}
    SRFile.close();

    cout << "Read in " << SrPar.size() << " stock recruitment parameters\n";

    // Read single column file the fishing pattern
    std::ifstream FishingPatternFile(argv[4]);
    std::vector< double > FishingPattern;
    double d;

    while(FishingPatternFile >> d){
      FishingPattern.push_back(d);}
    FishingPatternFile.close();

    cout << "Read in " << FishingPattern.size() << " fishing pattern values\n";

    // Read single column file the availability
    std::ifstream AvailabilityFile(argv[5]);
    std::vector< double > Availability;
    double e;

    while(AvailabilityFile >> e){
      Availability.push_back(e);}
    AvailabilityFile.close();

    cout << "Read in " << Availability.size() << " availability values\n";

    //

    std::vector< double > TotTargetedEffort(100, 0.0), LongTermCatch(100, 0.0);
    std::vector< double >   NontargetedEffort(NbYear * NWPY, 0.0), proj_biomass(NbYear * NWPY, 0.0);
    
    for(unsigned int i = 0; i < 100; ++i){
      TotTargetedEffort.at(i) = i * 20e3 / 100;
      LongTermCatch.at(i) = YearlyLongTermCatch(NbYear*NWPY, TotTargetedEffort.at(i), NontargetedEffort, Par, proj_biomass, PropMature, SrPar, FishingPattern, Availability);
      
      cout << "Total effort is " << TotTargetedEffort.at(i) << " and Total catch in the last year is " <<  LongTermCatch.at(i) << "\n";
    }

    //cout << "The size of vector of biomass is " << proj_biomass.size() << "\n";
    //for(unsigned int i = 0; i < proj_biomass.size(); ++i)
      //      cout << proj_biomass[i] << "\n";
  return 0;

}
