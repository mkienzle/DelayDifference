library("DelayDiffForR")
q()
library("DelayDiffForR")
q()
q()
library("DelayDiffForR")
source("~/mystuff/Course/Rcpp/HowToCallTheC++FunctionFitLWInR.R")
system(("less ~/mystuff/Course/Rcpp/HowToCallTheC++FunctionFitLWInR.R")
system(("less ~/mystuff/Course/Rcpp/HowToCallTheC++FunctionFitLWInR.R")
system("less ~/mystuff/Course/Rcpp/HowToCallTheC++FunctionFitLWInR.R")
my.data <- read.table("lw.dat")
# A wrapper function
FitLW <- function(x,y,z){
.Call('FitLW',x,y,z)
}
FitLW(my.data$V1, my.data$V2, my.data$V3)
my.data <- read.table("~/mystuff/Course/Rcpp/lw.dat")
FitLW(my.data$V1, my.data$V2, my.data$V3)
q()
library("DelayDiffForR")
FitLW
rm(list = ls())
library("DelayDiffForR")
q()
library("DelayDiffForR")
q()
library("DelayDiffForR")
FitLW
q()
rm(list = ls())
objects()
library("DelayDiffForR")
objects()
my.data <- read.table("lw.dat")
my.data <- read.table("~/mystuff/Course/Rcpp/lw.dat")
FitLW(my.data$V1, my.data$V2, my.data$V3)
q()
data(lw)
library("DelayDiffForR")
data(lw)
FitLW(lw[,1], lw[,2], lw[,3])
head(lw)
q()
library("DelayDiffForR")
example("FitLW")
?FitLW
data(lw)
FitLW(lw[,1], lw[,2], lw[,3])
q()
library("DelayDiffForR")
example("FitLW")
?FitLW
library("DelayDiffForR")
example("FitLW")
q()
length<-runif(1000,20,80);a=0.00075; b=3 ;weight<-a*length^b;lengthbin<-floor(length);data<-cbind(names(tapply(weight,lengthbin+0.5,mean)),tapply(weight,lengthbin+0.5,mean),sqrt(tapply(weight,lengthbin+0.5,var)))
head(data)
length<-runif(1000,20,80);a=0.00075; b=3 ;weight<-a*length^b;lengthbin<-floor(length);data<-cbind(names(tapply(weight,lengthbin+0.5,mean)),tapply(weight,lengthbin+0.5,mean),sqrt(tapply(weight,lengthbin+0.5,var))); data <- as.numeric(data)
head(data)
length<-runif(1000,20,80);a=0.00075; b=3 ;weight<-a*length^b;lengthbin<-floor(length);data<-cbind(as.numeric(names(tapply(weight,lengthbin+0.5,mean))),tapply(weight,lengthbin+0.5,mean),sqrt(tapply(weight,lengthbin+0.5,var)));
head(data)
library("DelayDiffForR")
FitLW(data[,1], data[,2], data[,3])
length<-runif(1000,20,80);a=0.75; b=2 ;weight<-a*length^b;lengthbin<-floor(length);data<-cbind(as.numeric(names(tapply(weight,lengthbin+0.5,mean))),tapply(weight,lengthbin+0.5,mean),sqrt(tapply(weight,lengthbin+0.5,var)));
FitLW(data[,1], data[,2], data[,3])
library("DelayDiffForR")
example(FitLW)
data(lw)
?FitLW
library("DelayDiffForR")
data(lw)
head(lw)
library("DelayDiffForR")
example(FitLW)
q()
library(DelayDiffForR); example(FitLW)
q()
